Categorie.create!([
  {label: "Method"},
  {label: "Class"},
  {label: "Scope"},
  {label: "Loop"},
  {label: "Regex"},
  {label: "Object"},
  {label: "Array"},
  {label: "Keyword"},
  {label: "Hash"},
  {label: "Symbol"},
  {label: "Block"},
  {label: "Iterator"},
  {label: "I/O"},
  {label: "Variable"},
  {label: "Constant"},
  {label: "String"},
  {label: "Number"},
  {label: "Range"},
  {label: "Module"},
  {label: "Inheritance"},
  {label: "Mixin"},
  {label: "Operator"},
  {label: "Encoding"},
  {label: "Alias"},
  {label: "Exception"},
  {label: "Conditional"},
  {label: "Kernel"},
  {label: "Comment"},
  {label: "Command line"},
  {label: "Pre-defined"},
  {label: "Non local exit"},
  {label: "Lambda"},
  {label: "Proc"},
  {label: "Thread"},
  {label: "Time"}
])
Question.create!([
  {categorie_id: 8, text: "Which of the following are NOT reserved words in Ruby?", rank: 0, snippet: nil},
  {categorie_id: 1, text: "Which of the following is the correct output for the program given below?", rank: 0, snippet: "def foo (a,  *b)\r\n p  a\r\nend\r\nfoo(1,2,3,4)"},
  {categorie_id: 9, text: "Which of the following is the correct output for the program given below?", rank: 0, snippet: "puts({\"members\" => 193, \"year\" => 2014}.size)"},
  {categorie_id: 35, text: "Which of the following is the correct output for the program given below?", rank: 0, snippet: "t = Time.now + (60*60*24)\r\np t"},
  {categorie_id: 14, text: "Which variable names are valid as local variables?", rank: 0, snippet: ""},
  {categorie_id: 18, text: "Which of the following is the correct output for the program given below?", rank: 0, snippet: "(1..2).each_with_index do |i,j|\r\n puts \"\#{i} \#{j}\"\r\nend"},
  {categorie_id: 12, text: "Which of the following is the correct output for the program given below?", rank: 0, snippet: "p 100.downto(90).select{|x| x%2==0}"},
  {categorie_id: 7, text: "Which of the following can be inserted into __(1)__ in order for the given code to generate the output below?", rank: 0, snippet: "p [1,1,2,3,5,8].__(1)__ {|x| x*2}\r\n\r\n[output]\r\n [2,2,4,6,10,16]"},
  {categorie_id: 16, text: "Which of the following is the correct output for the program given below ?", rank: 0, snippet: "puts \"Ruby on Rails\".delete(\"Rails\")"},
  {categorie_id: 13, text: "An error occurred while trying to create a string using a here document. Which of the following solutions are appropriate?", rank: 0, snippet: "doc = <<EOF\r\n the quick brown fox\r\n jumps over the lazy dog\r\n         EOF"}
  ])
GoodAnswer.create!([
  {question_id: 1, wording: "try", reason: "Not a reserved word"},
  {question_id: 1, wording: "goto", reason: "Not a reserved word"},
  {question_id: 2, wording: "1", reason: "a is defined and will be returned"},
  {question_id: 3, wording: "2", reason: "Returns the number of key-value pairs"},
  {question_id: 4, wording: "Current system time + a day later ", reason: "Time#+ method adds some number of seconds to time "},
  {question_id: 5, wording: "_365", reason: "Start with underscore"},
  {question_id: 5, wording: "switch", reason: "Switch is not a reserved word"},
  {question_id: 5, wording: "z", reason: "Start with lowercase charater"},
  {question_id: 6, wording: "1 0, 2 1", reason: "A  Range  object  represents  an  interval  that  is  a  group  of  numbers  that  includes  all  integer  number    between  the  beginning  and  the  end. You  can  use  ranges  by  means  of  the    ..  and  ...  operators.Also, i is the value and j the index."},
  {question_id: 7, wording: "[100,98,96,94,92,90]", reason: "Downto iterates from a large number to min number.\r\n"},
  {question_id: 8, wording: "collect", reason: "Returns a new array with the results of running block once for every element."},
  {question_id: 8, wording: "map", reason: "Returns a new array with the results of running block once for every element."},
  {question_id: 9, wording: "uby on", reason: "Returns  a  copy  of  string  with  all  characters  in  the  intersection  of  its  arguments  deleted."},
  {question_id: 10, wording: "Replace the first <<EOF with <<-­EOF.", reason: "You  can  omit  the  dash  \r\nand  just  write  <<  of  the  identifier  -­‐  if  you  do  this,  your  terminating  se\r\n-­‐\r\nquence  must  be  at  the  begging  of  the  line."},
  {question_id: 10, wording: "Remove the whitespace in front of the last EOF.", reason: "You  can  omit  the  dash  \r\nand  just  write  <<  of  the  identifier  -­‐  if  you  do  this,  your  terminating  se\r\n-­‐\r\nquence  must  be  at  the  begging  of  the  line."}
])
BadAnswer.create!([
  {question_id: 1, wording: "super", reason: "Reserved word"},
  {question_id: 1, wording: "begin", reason: "Reserved word"},
  {question_id: 1, wording: "alias", reason: "Reserved word"},
  {question_id: 2, wording: "nil", reason: "foo will return a"},
  {question_id: 2, wording: "An error has occurred", reason: "the code is correct"},
  {question_id: 2, wording: "[1,2,3,4]", reason: "only *b return an array so [2,3,4]"},
  {question_id: 2, wording: "[1]", reason: "first params is not returned as an array"},
  {question_id: 3, wording: "15", reason: "No reason"},
  {question_id: 3, wording: "6", reason: "No reason"},
  {question_id: 3, wording: "4", reason: "No returns of key AND value number"},
  {question_id: 4, wording: "Current system time", reason: "Addition is valid"},
  {question_id: 4, wording: "An error has occurred.", reason: "No reason"},
  {question_id: 4, wording: "Nil", reason: "No reason"},
  {question_id: 4, wording: "1970-01-01 00:00:00 UTC", reason: "Not returns Epoch time origin"},
  {question_id: 5, wording: "365_", reason: "Cannot start with number"},
  {question_id: 5, wording: "Hello", reason: "Start with uppercase will declare a constant"},
  {question_id: 5, wording: "break", reason: "Is a reserved word"},
  {question_id: 5, wording: "%alpha", reason: "Special character are not allow"},
  {question_id: 6, wording: "0 1, 1 2", reason: "i is the value and j the index."},
  {question_id: 6, wording: "1 1, 2 2", reason: "Index start at 0"},
  {question_id: 6, wording: "3 1", reason: "Args in not added"},
  {question_id: 6, wording: "3 3", reason: "Index start at 0 and args in not added"},
  {question_id: 7, wording: "[90,92,94,96,98,100]", reason: "Downto iterates from a large number to min number."},
  {question_id: 7, wording: "[100,99,98,97,96,95,94,93,92,91,90] ", reason: "x%2==0 will return even number"},
  {question_id: 7, wording: "[]", reason: "No reason"},
  {question_id: 7, wording: "[99,97,95,93,91]", reason: "x%2==0 will return even number"},
  {question_id: 8, wording: "flatten", reason: "Returns a new array that is a one-dimensional flattening of self."},
  {question_id: 8, wording: "join", reason: "Returns a string created by converting each element of the array to a string."},
  {question_id: 8, wording: "compact!", reason: "Removes nil elements from the array."},
  {question_id: 8, wording: "uniq", reason: "Returns a new array by removing duplicate values"},
  {question_id: 9, wording: "An error has occurred", reason: "No reason"},
  {question_id: 9, wording: "Ruby on", reason: "\"R\" will be also deleted"},
  {question_id: 9, wording: "Rails", reason: "Doesn't return the deleted part"},
  {question_id: 9, wording: "Ruby on Rails", reason: "Doesn't change the actual string but still puts it"},
  {question_id: 10, wording: "Replace the last EOF with >>EOF.", reason: "No reason"},
  {question_id: 10, wording: "Replace the first <<EOF with << EOF.", reason: "No reason"},
  {question_id: 10, wording: "Replace the first <<EOF with <<-­-EOF.", reason: "No reason"},
  {question_id: 10, wording: "Replace the last EOF with EOF->>.", reason: "No reason"}
  ])
